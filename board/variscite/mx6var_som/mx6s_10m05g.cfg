/*
 * Copyright (C) 2013 Freescale Semiconductor, Inc.
 * Jason Liu <r64343@freescale.com>
 *
 * See file CREDITS for list of people who contributed to this
 * project.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not write to the Free Software
 * Foundation Inc. 51 Franklin Street Fifth Floor Boston,
 * MA 02110-1301 USA
 *
 * Refer docs/README.imxmage for more details about how-to configure
 * and create imximage boot image
 *
 * The syntax is taken as close as possible with the kwbimage
 */
/* image version */

IMAGE_VERSION 2

/*
 * Boot Device : one of spi, sd, eimnor, nand, sata:
 * spinor: flash_offset: 0x0400
 * nand:   flash_offset: 0x0400
 * sata:   flash_offset: 0x0400
 * sd/mmc: flash_offset: 0x0400
 * eimnor: flash_offset: 0x1000
 */

#if defined(CONFIG_SYS_BOOT_EIMNOR)
BOOT_FROM	nor
#else /* others has the same flash_offset as sd */
BOOT_FROM	sd
#endif

#ifdef CONFIG_USE_PLUGIN
/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
PLUGIN	board/freescale/mx6qsabreauto/plugin.bin 0x00907000
#else

#ifdef CONFIG_SECURE_BOOT
SECURE_BOOT
#endif

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *	Addr-type register length (1,2 or 4 bytes)
 *	Address	  absolute address of the register
 *	value	  value to be stored in the register
 */
DATA 4, 0x020e0774, 0x000C0000
DATA 4, 0x020e0754, 0x00000000
DATA 4, 0x020e04ac, 0x00000030
DATA 4, 0x020e04b0, 0x00000030
DATA 4, 0x020e0464, 0x00000030
DATA 4, 0x020e0490, 0x00000030
DATA 4, 0x020e074c, 0x00000030
DATA 4, 0x020e0494, 0x00000030
DATA 4, 0x020e04a0, 0x00000000
DATA 4, 0x020e04b4, 0x00000030
DATA 4, 0x020e04b8, 0x00000030
DATA 4, 0x020e076c, 0x00000030
DATA 4, 0x020e0750, 0x00020000
DATA 4, 0x020e04bc, 0x00000028
DATA 4, 0x020e04c0, 0x00000028
DATA 4, 0x020e04c4, 0x00000028
DATA 4, 0x020e04c8, 0x00000028
DATA 4, 0x020e0760, 0x00020000
DATA 4, 0x020e0764, 0x00000028
DATA 4, 0x020e0770, 0x00000028
DATA 4, 0x020e0778, 0x00000028
DATA 4, 0x020e077c, 0x00000028
DATA 4, 0x020e0470, 0x00000028
DATA 4, 0x020e0474, 0x00000028
DATA 4, 0x020e0478, 0x00000028
DATA 4, 0x020e047c, 0x00000028
//=============================================================================
// DDR Controller Registers
//=============================================================================
DATA 4, 0x021b0800, 0xa1390003// DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ

// write leveling, based on Variscite SOM board layout and T topology
DATA 4, 0x021b080c, 0x001F001F // MPWLDECTRL0 PHY Write Leveling Delay Control Register 0 
DATA 4, 0x021b0810, 0x001F001F // MPWLDECTRL1 PHY Write Leveling Delay Control Register 1

//Read DQS Gating calibration
DATA 4, 0x021b083c, 0x421C0216	// MPDGCTRL0 PHY0
DATA 4, 0x021b0840, 0x017B017A	// MPDGCTRL1 PHY0

//Read calibration
DATA 4, 0x021b0848, 0x4B4A4E4C  // MPRDDLCTL PHY0

//Write calibration
DATA 4, 0x021b0850, 0x38363236 // MPWRDLCTL PHY0

//read data bit delay: (3 is the reccommended default value, although out of reset value is 0):
DATA 4, 0x021b081c, 0x33333333	// DDR_PHY_P0_MPREDQBY0DL3
DATA 4, 0x021b0820, 0x33333333	// DDR_PHY_P0_MPREDQBY1DL3
DATA 4, 0x021b0824, 0x33333333	// DDR_PHY_P0_MPREDQBY2DL3
DATA 4, 0x021b0828, 0x33333333	// DDR_PHY_P0_MPREDQBY3DL3

// Complete calibration by forced measurement:
DATA 4, 0x021b08b8, 0x00000800 // DDR_PHY_P0_MPMUR0, frc_msr

//MMDC init:
DATA 4, 0x021b0004, 0x00020025	// MMDC0_MDPDC
DATA 4, 0x021b0008, 0x00333030	// MMDC0_MDOTC
DATA 4, 0x021b000c, 0x676B5313	// MMDC0_MDCFG0
DATA 4, 0x021b0010, 0xB66E8B63	// MMDC0_MDCFG1
DATA 4, 0x021b0014, 0x01FF00DB	// MMDC0_MDCFG2
DATA 4, 0x021b0018, 0x00001740	// MMDC0_MDMISC

DATA 4, 0x021b001c, 0x00008000	// MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DATA 4, 0x021b002c, 0x000026d2	// MMDC0_MDRWD; recommend to maintain the default values
DATA 4, 0x021b0030, 0x006B1023	// MMDC0_MDOR
DATA 4, 0x021b0040, 0x00000027	// CS0_END

// Mode register writes
DATA 4, 0x021b0000, 0x84190000	// MMDC0_MDCTL

DATA 4, 0x021b001c, 0x04008032	// MMDC0_MDSCR, MR2 write, CS0
DATA 4, 0x021b001c, 0x00008033	// MMDC0_MDSCR, MR3 write, CS0
DATA 4, 0x021b001c, 0x00048031	// MMDC0_MDSCR, MR1 write, CS0
DATA 4, 0x021b001c, 0x05208030	// MMDC0_MDSCR, MR0 write, CS0
DATA 4, 0x021b001c, 0x04008040	// MMDC0_MDSCR, ZQ calibration command sent to device on CS0

DATA 4, 0x021b0020, 0x00005800	// MMDC0_MDREF
DATA 4, 0x021b0818, 0x00011117	// DDR_PHY_P0_MPODTCTRL

DATA 4, 0x021b0004, 0x00025565	// MMDC0_MDPDC with PWDT bits set
DATA 4, 0x021b0404, 0x00011006	// MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.

DATA 4, 0x021b001c, 0x00000000 // MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)

/* set the default clock gate to save power */
DATA 4, 0x020c4068, 0x00C03F3F
DATA 4, 0x020c406c, 0x0030FC03
DATA 4, 0x020c4070, 0x0FFFC000
DATA 4, 0x020c4074, 0x3FF00000
DATA 4, 0x020c4078, 0xFFFFF300
DATA 4, 0x020c407c, 0x0F0000C3
DATA 4, 0x020c4080, 0x00000FFF

/* enable AXI cache for VDOA/VPU/IPU */
DATA 4, 0x020e0010, 0xF00000CF
/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
DATA 4, 0x020e0018, 0x007F007F
DATA 4, 0x020e001c, 0x007F007F
#endif
